C51 COMPILER V9.55   MAIN                                                                  04/25/2016 14:49:58 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*  Name     : main.c
   2           *  Purpose  : Main file for generating pwm using AT89S8253 vary dutycle thus control the speed of motor
   3           *  Author   : Etiq Technologies
   4           *  Date     : 25/04/2016 
   5           *  Revision : None
   6           */
   7          #include <REG8253.H>
   8          
   9          
  10          sbit PWM_Pin = P2^0;       // Pin P2.0 is named as PWM_Pin
  11          
  12          // Function declarations
  13          void port_init(void);
  14          void InitTimer0(void);
  15          void InitPWM(void);
  16          
  17          
  18          /*
  19           
  20           */
  21          
  22          
  23          
  24          // Main Function
  25          int main(void)
  26          {
  27   1         unsigned  int dutycycle=50;
  28   1         port_init();            // Make all ports zero except port0
  29   1         InitPWM();              // Start PWM
  30   1                                  // Rest is done in Timer0 interrupt
  31   1       
  32   1         
  33   1        while(1)               
  34   1         {
  35   2        if((P0_0==0)&&(dutycycle<250))   // if P0_0 pressed value of dutycycle variable increased results in spee
             -d reduction
  36   2        {
  37   3        while(!P0_0);
  38   3        dutycycle+=20;                    
  39   3        }
  40   2        
  41   2        if((P0_1==0)&&(dutycycle>50))  //if P0_1 is pressed value of dutycycle variable is reduced results in spe
             -ed increase
  42   2        {
  43   3        while(!P0_1);
  44   3        dutycycle-=20;  
  45   3        }
  46   2        
  47   2        /*
  48   2        if pwm pin is high then TH0 is modified so that for the next overload new value will be loaded  
  49   2        and the timer will run for the rest of the period with pwm pin low which is made in ISR. Similarly
  50   2        opposite carried out 
  51   2        for pwm pin low.*/
  52   2        
C51 COMPILER V9.55   MAIN                                                                  04/25/2016 14:49:58 PAGE 2   

  53   2        if(PWM_Pin==1)           
  54   2        TH0=255-dutycycle;       
  55   2        
  56   2        if(PWM_Pin==0)
  57   2        TH0=dutycycle;
  58   2       }
  59   1         
  60   1       }
  61          // Init CCT function
  62          void port_init(void)
  63          {
  64   1        P0=0xFF;  
  65   1        P1=0x00;
  66   1        P2=0x00;  
  67   1        P3=0x00;
  68   1        
  69   1      }
  70          
  71          // Timer0 initialize
  72          void InitTimer0(void)
  73          {
  74   1        TMOD &= 0xF0;    // Clear 4bit field for timer0
  75   1        TMOD |= 0x02;    // Set timer0 in mode 2
  76   1        
  77   1        
  78   1        ET0 = 1;         // Enable Timer0 interrupts
  79   1        EA  = 1;         // Global interrupt enable
  80   1        
  81   1        TR0 = 1;         // Start Timer 0
  82   1      }
  83          
  84          // PWM initialize
  85          void InitPWM(void)
  86          {
  87   1        
  88   1        PWM_Pin=1;
  89   1        InitTimer0();    // Initialize timer0 to start generating interrupts
  90   1                
  91   1      }
  92          // PWM generation code is written inside the Timer0 ISR
  93          // Timer0 ISR
  94          
  95          void Timer0_ISR (void) interrupt 1   
  96          {
  97   1      
  98   1        if(PWM_Pin)    // if PWM_Pin is high
  99   1        {
 100   2          PWM_Pin = 0;
 101   2        }
 102   1        else           // if PWM_Pin is low
 103   1        {
 104   2          PWM_Pin = 1;
 105   2          
 106   2        }
 107   1      
 108   1        TF0 = 0;     // Clear the interrupt flag
 109   1      
 110   1      }
 111          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.55   MAIN                                                                  04/25/2016 14:49:58 PAGE 3   

   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
